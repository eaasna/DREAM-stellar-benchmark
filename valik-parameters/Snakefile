workdir: config["workdir"]

#-------- Simulation parameters --------
ref_len = config["reference_length"]
ht = config["haplotypes"]
bins = config["ibf_bins"]
bin_list = list(range(bins))
bin_list = [str(bin).zfill(len(str(bins))) for bin in bin_list]
match_len = config["match_length"]
matches = config["match_count"]

sim_errors = 8

import random
# simulation needs unique seeds otherwise the same sequence is simulated
def get_seed(wildcards):
        return random.randint(0, 1e6)

def get_simulation_error_count(wildcards):
        error_count = round(int(match_len) * float(wildcards.er))
        return error_count

#-------- Parameter to test --------
ibf_sizes = config["size_list"]

#-------- Search parameters --------
pattern = config["minLen"]
w = config["window"]
k = config["kmer_length"]
overlap = config["pattern_overlap"]

search_errors = 2
search_error_rate = search_errors / pattern

rule make_all:
	input:
		expand("{size}/e{sim_er}_o{o}.out", size = ibf_sizes, sim_er = sim_errors, o=overlap),
		expand("matches/bin_{bin}_e{sim_er}.txt", bin = bin_list, sim_er = sim_errors)
	shell:
		"echo 'Done'"

include: "rules/simulate.smk"
include: "rules/valik.smk"
include: "rules/stellar.smk"
include: "rules/evaluate.smk"

