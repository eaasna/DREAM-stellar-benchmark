workdir : "work"
stellar = "/group/ag_abi/evelina/stellar3/build/bin/stellar"
valik = config["valik_exec"]

stellar_out=config["stellar_out"]
blast_out=config["blast_out"]
dream_out=config["dream_out"]

#-------- split parameters --------
fpr_list = config["ibf_fpr"]
bin_list = config["ibf_bins"]
min_lens = config["min_len"]

#-------- build parameters --------
minimiser_flag = config["minimiser_flag"]
cmin_list = config["kmer_cmin"]
cmax_list = config["kmer_cmax"]

#-------- search parameters --------
errors = config["errors"]
repeat_flag = config["repeat_flag"]
bin_entropy_cutoffs = [1.0]
if (repeat_flag == "--keep-best-repeats"):
	bin_entropy_cutoffs = config["bin_entropy_cutoffs"]

cart_max_capacity = config["cart_max_capacity"]
max_queued_carts = config["max_queued_carts"]

num_matches = 20000
sort_thresh = num_matches + 1
repeat_periods = config["repeat_periods"]
repeat_lengths = config["repeat_lengths"]
search_threads = workflow.cores

#-------- BLAST parameters --------
evalues = config["evalues"]
blast_kmer_lengths = config["blast_kmer_lengths"]

#-------- Evaluation parameters --------
n = 1
min_overlap = 10
run_id = config["run_id"]
comparison_evalue = 0.1

#--------\ Shared functions --------
import random
import math
import os

def dir_path(filename):
	return os.path.split(filename)[0] + "/"

def get_error_rate(wildcards):
	return int(wildcards.er) / int(wildcards.min_len)

#-------- Shared functions \--------
rule make_all:
	input:
#		"blast.stellar.accuracy",
		"valik.stellar.accuracy",
#		"valik.blast.accuracy"
	shell:
		"echo 'Done'"

include: "rules/prepare.smk"
include: "rules/stellar.smk"
include: "rules/dream.smk"
include: "rules/blast.smk"

